<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--window control button style-->
    <Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BlueColorBrush}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="45" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{x:Null}" BorderThickness="0" UseLayoutRounding="True" Background="{TemplateBinding Background}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BlueColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--search button style-->
    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource BlueColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="FontSize" Value="{StaticResource Small}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            UseLayoutRounding="True" Background="{TemplateBinding Background}" Padding="4"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BlueColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--sub-menu modify button style-->
    <Style x:Key="DirectoryControlModifyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource XXSmall}" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
        <Setter Property="Margin" Value="12 0 0 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" UseLayoutRounding="True" >
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--navigation button style-->
    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource BlueColorBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" UseLayoutRounding="True" Padding="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--hover event-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UltraLightBlueColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--path button icon-->
    <Style x:Key="NavigationHomeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" UseLayoutRounding="True" Padding="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--hover event-->
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UltraLightBlueColorBrush}" />
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--view format style-->
    <Style x:Key="ViewFormatStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource BlueColorBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}" >
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="4"
                            UseLayoutRounding="True">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--hover event-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UltraLightBlueColorBrush}" />
                        </Trigger>
                        <!--is-checked event-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BlueColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--home page toggle button-->
    <Style x:Key="HomepageToggleButtonstyle" TargetType="{x:Type ToggleButton}" >
        <Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlueColorBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!--button content / title and icon-->
                                <ColumnDefinition Width="Auto" />
                                <!--button line design-->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Border" Grid.Column="0" Margin="60 0" Padding="12 2" Panel.ZIndex="1"
                                    HorizontalAlignment="Left" Background="{DynamicResource WhiteColorBrush}" >
                                <StackPanel Orientation="Horizontal">
                                    <!--button content / title-->
                                    <ContentPresenter Content="{TemplateBinding Content}" Margin="16 0 16 2"
                                                      VerticalAlignment="Center" HorizontalAlignment="Left" />
                                    <!--button icon-->
                                    <TextBlock x:Name="ButtonAngle" Text="{StaticResource AngleRightIcon}" Foreground="{DynamicResource BlueColorBrush}" 
                                               FontSize="{TemplateBinding FontSize}" FontFamily="{StaticResource FontAwesomeSolid}"
                                               Margin="2 0 16 0" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5, 0.5" >
                                    </TextBlock>

                                </StackPanel>
                            </Border>

                            <!--button line design-->
                            <Border Grid.ColumnSpan="2" Background="{DynamicResource BlueColorBrush}" Height="1" Margin="10 0"
                                    HorizontalAlignment="Stretch"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--hover event--> 
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UltraLightBlueColorBrush}" />
                            <Setter Property="Background" Value="{DynamicResource UltraLightBlueColorBrush}" TargetName="Border" />
                        </Trigger>
                        <!--ischecked event--> 
                        <Trigger Property="IsChecked" Value="True" >
                            <Setter Property="RenderTransform" TargetName="ButtonAngle">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource BlueColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                          Margin="16 8"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BlueColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>